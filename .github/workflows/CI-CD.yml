# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the workflow will run
on:
  push:
    branches: 
      - main
      - dev
  pull_request:
    branches:
      - main
      
jobs:
  backend-unit-tests:
    uses: rropen/reusable-workflows/.github/workflows/pytest.yml@main
    with:
      backend_directory: src/backend

  frontend-unit-tests:
    uses: rropen/reusable-workflows/.github/workflows/cypress_component_tests.yml@main
    with:
      frontend_directory: src/frontend
      
  docker-build:
    uses: rropen/reusable-workflows/.github/workflows/docker_build.yml@main
    with:
      dockerfile_directory: src/backend
      image: ghcr.io/rropen/mec_backend:latest
      registry: ghcr.io
    secrets:
      cr_username: ${{ secrets.GH_CR_USERNAME }}
      cr_PAT: ${{ secrets.CONTAINER_PAT }}
      
  integration-tests:
    needs: [docker-build, backend-unit-tests, frontend-unit-tests]
    uses: rropen/reusable-workflows/.github/workflows/cypress_E2E.yml@main
    with:
      backend_directory: src/backend
      frontend_directory: src/frontend
      backend_url: http://localhost:8181
      image: ghcr.io/rropen/mec_backend:latest
    secrets:
      vue_cobalt_token: ${{ secrets.VUE_COBALT_PAT }}
      cr_username: ${{ secrets.GH_CR_USERNAME }}
      cr_PAT: ${{ secrets.CONTAINER_PAT }}
      
  snyk-vulnerability-scanning:
    needs: integration-tests
    uses: rropen/reusable-workflows/.github/workflows/snyk_vulnerability_scanning.yml@main
    secrets:
      snyk_token: ${{secrets.SNYK_TOKEN}}

  snyk-docker-vulnerability-scanning:
    needs: integration-tests
    uses: rropen/reusable-workflows/.github/workflows/snyk_docker_vulnerability_scanning.yml@main
    with:
      image: ghcr.io/rropen/mec_backend:latest
      dockerfile_directory: src/backend
    secrets:
      snyk_token: ${{secrets.SNYK_TOKEN}}
      cr_username: ${{ secrets.GH_CR_USERNAME }}
      cr_PAT: ${{ secrets.CONTAINER_PAT }}
