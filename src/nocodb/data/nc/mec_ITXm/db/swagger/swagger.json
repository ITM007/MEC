{"tags":[{"name":"meetings","description":"Everything about your meetings"},{"name":"Procedures","description":""},{"name":"Functions","description":""}],"paths":{"/nc/mec_ITXm/api/v1/meetings":{"post":{"tags":["meetings"],"summary":"Add a new meetings","description":"","operationId":"addmeetings","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"meetings object that needs to add","required":true,"schema":{"$ref":"#/definitions/meetings"}}],"responses":{"405":{"description":"Invalid input"}}},"get":{"tags":["meetings"],"summary":"Get list","description":"","operationId":"getmeetings","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/meetingsNested"}}},"405":{"description":"Invalid input"}}}},"/nc/mec_ITXm/api/v1/meetings/{meetingsId}":{"get":{"tags":["meetings"],"summary":"Find meetings by ID","description":"Returns a single meetings","operationId":"getmeetingsById","produces":["application/json"],"parameters":[{"name":"meetingsId","in":"path","description":"ID of meetings to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"query","name":"bt","type":"string","description":"Comma separated parent table names(Belongs To)"},{"in":"query","name":"hm","type":"string","description":"Comma separated child table names(Has Many)"},{"in":"query","name":"mm","type":"string","description":"Comma separated child table names(Many to Many)"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/meetingsNested"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"meetings not found"}}},"put":{"tags":["meetings"],"summary":"Updates a meetings","description":"","operationId":"updatemeetings","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"meetingsId","in":"path","description":"ID of meetings to return. In case of composite key provide keys separated by ___","required":true,"type":"string"},{"in":"body","name":"body","description":"meetings object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/meetings"}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["meetings"],"summary":"Deletes a meetings","description":"","operationId":"deletemeetings","produces":["application/json"],"parameters":[{"name":"meetingsId","in":"path","description":"ID of meetings to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"meetings not found"}}}},"/nc/mec_ITXm/api/v1/meetings/bulk":{"post":{"tags":["meetings"],"summary":"Bulk meetings insert","description":"","operationId":"bulkmeetingsInsert","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"meetings objects","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/meetings"}}}],"responses":{"405":{"description":"Invalid input"}}},"put":{"tags":["meetings"],"summary":"Updates a meetings","description":"","operationId":"updatemeetings","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"meetings objects with id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/meetings"}}}],"responses":{"405":{"description":"Invalid input"}}},"delete":{"tags":["meetings"],"summary":"Deletes a meetings","description":"","operationId":"deletemeetings","produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"meetings objects contains id","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/meetings"}}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"meetings not found"}}}},"/nc/mec_ITXm/api/v1/meetings/findOne":{"get":{"tags":["meetings"],"summary":"Get first one from filtered data","description":"","operationId":"findOnemeetings","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/meetings"}},"405":{"description":"Invalid input"}}}},"/nc/mec_ITXm/api/v1/meetings/{meetingsId}/exists":{"get":{"tags":["meetings"],"summary":"Check meetings with provided ID exists","description":"Returns a single meetings","operationId":"checkmeetingsExists","produces":["application/json"],"parameters":[{"name":"meetingsId","in":"path","description":"ID of meetings to return. In case of composite key provide keys separated by ___","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"boolean"}}}}},"/nc/mec_ITXm/api/v1/meetings/count":{"get":{"tags":["meetings"],"summary":"Get meetings count","operationId":"getmeetingsCount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"where","type":"string","description":"Where expression"}],"responses":{"200":{"description":"successful operation","schema":{"type":"object"}},"405":{"description":"Invalid input"}}}},"/nc/mec_ITXm/api/v1/meetings/groupby":{"get":{"tags":["meetings"],"summary":"Group by column","description":"","operationId":"meetingsGroupByColumn","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fieldst","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/meetings"}},"405":{"description":"Invalid input"}}}},"/nc/mec_ITXm/api/v1/meetings/distribution":{"get":{"tags":["meetings"],"summary":"","description":"","operationId":"meetingsDistribution","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"min","description":"min value","type":"integer","format":"int64"},{"in":"query","name":"max","description":"max value","type":"integer","format":"int64"},{"in":"query","name":"step","description":"step value","type":"integer","format":"int64"},{"in":"query","name":"steps","description":"steps value","type":"integer","format":"int64"},{"in":"query","name":"func","description":"comma separated aggregation functions","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/mec_ITXm/api/v1/meetings/distinct":{"get":{"tags":["meetings"],"summary":"Get first one from filtered data","description":"","operationId":"meetingsDistinct","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"where","type":"string","description":"Where expression"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"object"}}},"405":{"description":"Invalid input"}}}},"/nc/mec_ITXm/api/v1/meetings/aggregate":{"get":{"tags":["meetings"],"summary":"Get first one from filtered data","description":"","operationId":"meetingsAggregate","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"query","name":"column_name","type":"string","description":"Column name"},{"in":"query","name":"func","type":"string","description":"Comma separated aggregate functions"},{"in":"query","name":"having","type":"string","description":"Having expression"},{"in":"query","name":"fields","type":"string","description":"Comma separated fields from the model"},{"in":"query","name":"limit","description":"Page size limit","type":"integer","format":"int64"},{"in":"query","name":"offset","description":"Pagination offset","type":"integer","format":"int64"},{"in":"query","name":"sort","description":"Comma separated sort fields","type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/meetings"}},"405":{"description":"Invalid input"}}}}},"definitions":{"meetings":{"type":"object","properties":{"id":{"type":"integer","nullable":false,"readOnly":true},"meetingId":{"type":"string"},"date":{"type":"string"},"employeeNumber":{"type":"integer"},"time":{"type":"integer"},"totalCost":{"type":"number"},"meetingGroup":{"type":"string"},"powerpointSlides":{"type":"integer"},"comment":{"type":"string"},"title":{"type":"string"},"groupCost":{"type":"number"}}},"meetingsNested":{"type":"object","properties":{"id":{"type":"integer","nullable":false,"readOnly":true},"meetingId":{"type":"string"},"date":{"type":"string"},"employeeNumber":{"type":"integer"},"time":{"type":"integer"},"totalCost":{"type":"number"},"meetingGroup":{"type":"string"},"powerpointSlides":{"type":"integer"},"comment":{"type":"string"},"title":{"type":"string"},"groupCost":{"type":"number"}}}}}